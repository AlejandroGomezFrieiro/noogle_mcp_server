name: Python CI/CD

on:
  push:
    branches:
      - main
  release:
    types:
      - published

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install the latest version of uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
    - name: Install dependencies
      run: |
          uv sync --extra test
    - name: Run tests
      run: |
          uv run --frozen pytest

  publish:
    needs: test
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install the latest version of uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
    - name: Install dependencies
      run: |
        uv pip install build twine
    - name: Build package
      run: uv build
    - name: Publish package to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload dist/*
